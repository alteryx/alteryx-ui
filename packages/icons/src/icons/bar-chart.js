import React from 'react';
import PropTypes from 'prop-types';

// Yeah. This looks ridiculous to me too, but it's what MUI is doing everywhere...
// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Avatar/Avatar.js#L38
// eslint-disable-next-line prefer-arrow-callback
const BarChart = React.forwardRef(function BarChart(props, ref) {
  const { color, size, ...otherProps } = props;
  const variantSizes = {
    xsmall: 12,
    small: 14,
    medium: 16,
    large: 20,
    xlarge: 28,
    xxlarge: 36,
  };

  const newSize = !isNaN(parseInt(size, 10))
    ? size
    : variantSizes[size] !== undefined
    ? variantSizes[size]
    : variantSizes['medium'];

  console.warn(
    'The icon BarChart is deprecated and will be removed in a future major release.'
  );

  return (
    <svg
      width={newSize}
      height={newSize}
      viewBox="0 0 24 24"
      {...otherProps}
      fill={color}
      ref={ref}
    >
      <path d="M1.86944444,0.8 C2.41086248,0.8 2.85831119,1.20233053 2.92912612,1.72432717 L2.93888889,1.86944444 L2.93888889,20.6611111 L21.7305556,20.6611111 C22.2719736,20.6611111 22.7194223,21.0634416 22.7902372,21.5854383 L22.8,21.7305556 C22.8,22.2719736 22.3976695,22.7194223 21.8756728,22.7902372 L21.7305556,22.8 L1.86944444,22.8 C1.32802641,22.8 0.880577704,22.3976695 0.809762767,21.8756728 L0.8,21.7305556 L0.8,1.86944444 C0.8,1.27880659 1.27880659,0.8 1.86944444,0.8 Z M18.5986111,2.25138889 C19.1787019,2.25138889 19.6581112,2.68245732 19.7339843,3.24173943 L19.7444444,3.39722222 L19.7444444,17.9111111 C19.7444444,18.5439374 19.2314374,19.0569444 18.5986111,19.0569444 C18.0185204,19.0569444 17.539111,18.625876 17.4632379,18.0665939 L17.4527778,17.9111111 L17.45125,4.54305556 L15.4651389,4.54305556 L15.4666667,17.9111111 C15.4666667,18.4912019 15.0355982,18.9706112 14.4763161,19.0464843 L14.3208333,19.0569444 C13.7407426,19.0569444 13.2613333,18.625876 13.1854601,18.0665939 L13.175,17.9111111 L13.175,9.89027778 L11.1888889,9.89027778 L11.1888889,17.9111111 C11.1888889,18.4912019 10.7578205,18.9706112 10.1985384,19.0464843 L10.0430556,19.0569444 C9.4629648,19.0569444 8.98355548,18.625876 8.90768233,18.0665939 L8.89722222,17.9111111 L8.89569444,14.4736111 L6.90958333,14.4736111 L6.91111111,17.9111111 C6.91111111,18.4912019 6.48004268,18.9706112 5.92076057,19.0464843 L5.76527778,19.0569444 C5.18518702,19.0569444 4.7057777,18.625876 4.62990455,18.0665939 L4.61944444,17.9111111 L4.61944444,13.3277778 C4.61944444,12.747687 5.05051287,12.2682777 5.60979498,12.1924046 L5.76527778,12.1819444 L8.89569444,12.1804167 L8.89722222,8.74444444 C8.89722222,8.16435369 9.32829065,7.68494437 9.88757276,7.60907122 L10.0430556,7.59861111 L13.1734722,7.59708333 L13.175,3.39722222 C13.175,2.81713147 13.6060684,2.33772214 14.1653505,2.261849 L14.3208333,2.25138889 L18.5986111,2.25138889 Z" />
    </svg>
  );
});

BarChart.propTypes = {
  color: PropTypes.string,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
};

BarChart.defaultProps = {
  color: 'currentColor',
  size: '16',
};

// We should try to find a way to not hard-code these properties, if possible.
BarChart.name = BarChart.render.name || 'BarChart';

export default BarChart;
