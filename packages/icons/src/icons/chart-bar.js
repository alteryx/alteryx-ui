import React from 'react';
import PropTypes from 'prop-types';

// Mui Example:
// https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Avatar/Avatar.js#L38
// eslint-disable-next-line prefer-arrow-callback
const ChartBar = React.forwardRef(function ChartBar(props, ref) {
  const { color, size, ...otherProps } = props;
  const variantSizes = {
    xsmall: 12,
    small: 14,
    medium: 16,
    large: 20,
    xlarge: 28,
    xxlarge: 36,
  };

  const newSize = !isNaN(parseInt(size, 10))
    ? size
    : variantSizes[size] !== undefined
    ? variantSizes[size]
    : variantSizes['medium'];

  return (
    <svg
      width={newSize}
      height={newSize}
      viewBox="0 0 24 24"
      {...otherProps}
      fill={color}
      ref={ref}
    >
      <path d="M1.88793103,0.75 C2.46402116,0.75 2.94012422,1.17809554 3.0154741,1.73352053 L3.02586207,1.88793103 L3.02586207,20.4741379 L21.612069,20.4741379 C22.1881591,20.4741379 22.6642621,20.9022335 22.739612,21.4576585 L22.75,21.612069 C22.75,22.1881591 22.3219045,22.6642621 21.7664795,22.739612 L21.612069,22.75 L1.88793103,22.75 C1.31184091,22.75 0.835737852,22.3219045 0.760387969,21.7664795 L0.75,21.612069 L0.75,1.88793103 C0.75,1.25946908 1.25946908,0.75 1.88793103,0.75 Z M19.7155172,12.2810345 L19.7155172,10.3086207 L5.68103448,10.3086207 C5.10494436,10.3086207 4.6288413,9.88052515 4.55349142,9.32510016 L4.54310345,9.17068966 C4.54310345,8.59459953 4.97119899,8.11849647 5.52662398,8.04314659 L5.68103448,8.03275862 L12.1308276,8.03124138 L12.1308276,6.06034483 L5.68103448,6.06034483 C5.10494436,6.06034483 4.6288413,5.63224928 4.55349142,5.07682429 L4.54310345,4.92241379 C4.54310345,4.34632367 4.97119899,3.87022061 5.52662398,3.79487073 L5.68103448,3.78448276 L13.2672414,3.78448276 C13.8433315,3.78448276 14.3194346,4.2125783 14.3947844,4.76800329 L14.4051724,4.92241379 L14.4051724,8.03275862 L20.8534483,8.03275862 C21.4295384,8.03275862 21.9056415,8.46085417 21.9809913,9.01627915 L21.9913793,9.17068966 L21.9913793,13.4189655 C21.9913793,13.9950556 21.5632838,14.4711587 21.0078588,14.5465086 L20.8534483,14.5568966 L17.4396552,14.5568966 L17.4396552,17.6672414 C17.4396552,18.2433315 17.0115596,18.7194346 16.4561346,18.7947844 L16.3017241,18.8051724 L5.68103448,18.8051724 C5.05257253,18.8051724 4.54310345,18.2957033 4.54310345,17.6672414 C4.54310345,17.0911513 4.97119899,16.6150482 5.52662398,16.5396983 L5.68103448,16.5293103 L15.1637931,16.5277931 L15.1637931,14.5568966 L5.68103448,14.5568966 C5.10494436,14.5568966 4.6288413,14.128801 4.55349142,13.573376 L4.54310345,13.4189655 C4.54310345,12.8428754 4.97119899,12.3667723 5.52662398,12.2914225 L5.68103448,12.2810345 L19.7155172,12.2810345 Z" />
    </svg>
  );
});

ChartBar.propTypes = {
  color: PropTypes.string,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
};

ChartBar.defaultProps = {
  color: 'currentColor',
  size: '16',
};

// Hard coding component names and render names
ChartBar.name = ChartBar.render.name || 'ChartBar';

export default ChartBar;
